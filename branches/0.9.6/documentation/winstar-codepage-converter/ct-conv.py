#!/usr/bin/python
#*-*coding:utf-8*-*
di={
u"а":6*16+1,
u"А":4*16+1,
u"б":11*16+2,
u"в":11*16+3,
u"г":11*16+4,
u"д":14*16+3,
u"е":6*16+5,
u"ё":11*16+5,
u"ж":11*16+6,
u"з":11*16+7,
u"и":11*16+8,
u"й":11*16+9,
u"к":11*16+10,
u"л":11*16+11,
u"м":11*16+12,
u"н":11*16+13,
u"о":6*16+15,
u"п":11*16+14,
u"р":7*16+0,
u"с":6*16+3,
u"т":11*16+15,
u"у":7*16+9,
u"ф":14*16+4,
u"х":7*16+8,
u"ц":14*16+5,
u"ч":12*16+0,
u"ш":12*16+1,
u"щ":14*16+6,
u"ъ":12*16+2,
u"ы":12*16+3,
u"ь":12*16+4,
u"э":12*16+5,
u"ю":12*16+6,
u"я":12*16+7,
u"А":4*16+1,
u"Б":10*16+0,
u"В":4*16+2,
u"Г":10*16+1,
u"Д":14*16+0,
u"Е":4*16+5,
u"Ё":10*16+2,
u"Ж":10*16+3,
u"З":10*16+4,
u"И":10*16+5,
u"Й":10*16+6,
u"К":4*16+11,
u"Л":10*16+7,
u"М":4*16+13,
u"Н":4*16+8,
u"О":4*16+15,
u"П":10*16+8,
u"Р":5*16+0,
u"С":4*16+3,
u"Т":5*16+4,
u"У":10*16+9,
u"Ф":10*16+10,
u"Х":5*16+8,
u"Ц":14*16+1,
u"Ч":10*16+11,
u"Ш":10*16+12,
u"Щ":14*16+2,
u"Ъ":10*16+13,
u"Ы":10*16+14,
u"Ь":12*16+4,
u"Э":10*16+15,
u"Ю":11*16+0,
u"Я":11*16+1,
u"1":3*16+1,
u"2":3*16+2,
u"3":3*16+3,
u"4":3*16+4,
u"5":3*16+5,
u"6":3*16+6,
u"7":3*16+7,
u"8":3*16+8,
u"9":3*16+9,
u"0":3*16+0,
u"!":2*16+1,
u"@":4*16+0,
u"#":2*16+3,
u"$":2*16+4,
u"%":2*16+5,
u"^":5*16+14,
u"&":2*16+6,
u"*":2*16+10,
u"(":2*16+8,
u")":2*16+9,
u"_":5*16+15,
u"+":2*16+11,
u"=":3*16+13,
u"-":2*16+13,
u"?":3*16+15,
u":":3*16+10,
u";":3*16+11,
u"№":4*16+14,
u"\"":2*16+2,
u"'":2*16+12,
u"<":3*16+12,
u">":3*16+14,
u"/":2*16+15,
u".":2*16+14,
u",":2*16+12,
u"`":6*16+0,
u"«":12*16+8,
u"»":12*16+9,
u"§":15*16+13,
u"~":14*16+9,
u"¼":15*16+0,
u"½":15*16+2,
u"¾":15*16+3,
u"¶":15*16+14,
u"é":14*16+10,
u"ç":14*16+11,
u" ":2*16+0,
u"a":6*16+1,
u"A":4*16+1,
u"b":6*16+2,
u"B":4*16+2,
u"c":6*16+3,
u"C":4*16+3,
u"d":6*16+4,
u"D":4*16+4,
u"e":6*16+5,
u"E":4*16+5,
u"f":6*16+6,
u"F":4*16+6,
u"g":6*16+7,
u"G":4*16+7,
u"h":6*16+8,
u"H":4*16+8,
u"i":6*16+9,
u"I":4*16+9,
u"j":6*16+10,
u"J":4*16+10,
u"k":6*16+11,
u"K":4*16+11,
u"l":6*16+12,
u"L":4*16+12,
u"m":6*16+13,
u"M":4*16+13,
u"n":6*16+14,
u"N":4*16+14,
u"o":6*16+15,
u"O":4*16+15,
u"p":7*16+0,
u"P":5*16+0,
u"q":7*16+1,
u"Q":5*16+1,
u"r":7*16+2,
u"R":5*16+2,
u"s":7*16+3,
u"S":5*16+3,
u"t":7*16+4,
u"T":5*16+4,
u"u":7*16+5,
u"U":5*16+5,
u"v":7*16+6,
u"V":5*16+6,
u"w":7*16+7,
u"W":5*16+7,
u"x":7*16+8,
u"X":5*16+8,
u"y":7*16+9,
u"Y":5*16+9,
u"z":7*16+10,
u"Z":5*16+10
};

default_symbol=12*16+13;


def conv_line(line, name):
	o="char %s[]={"%(name)
	for j in range(0,len(line)):		
		if line[j] in di:
			o=o+str(di[line[j]])
		else:
			o=o+str(default_symbol)
		o=o+","
	o=o+"0};"
	print(o)
		
n=0
while True:
	try:
		line=raw_input()
		conv_line(line.decode("utf-8"),"text%i"%(n))		
	except EOFError:
		break
	n=n+1
print("/*Done.*/")
