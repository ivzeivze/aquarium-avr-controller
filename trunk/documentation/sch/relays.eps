%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 20081231
%%CreationDate: Thu Dec 10 03:35:33 2009
%%Title: /home/ivze/prog/aquarium/aquarium-avr-controller/sch/relays.sch
%%Author: ivze
%%BoundingBox: 0 0 1224 792
%%Orientation: Portrait
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

% Show a string, with an overbar over it
% string charshow -
/charshow {
    drawoverbar {
	% draw an overbar for the character
	gsave
	fontsize 10.0 div setlinewidth
	0 fontsize rmoveto  % move to (0,overbarheight) 
	dup stringwidth pop 0 rlineto % draw line to 
	stroke
	grestore
    } if
    show
} bind def

/overbarshow {
    /drawoverbar false def      % start by not drawing overbars
    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		/drawoverbar drawoverbar not def
	    } {
		% otherwise render the character 
		(\\ ) dup 1 4 -1 roll put % draw a \ and the character
		charshow                      % render the string
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
		% no, reset flag and draw character
		( ) dup 0 4 -1 roll put	% create one character string
		charshow
	    } ifelse
	} ifelse
    } forall
} bind def
% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 111.111115 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 111.111115 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 111.111115 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 111.111115 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 111.111115 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 111.111115 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
50400 43900 50700 43900 10 line
gsave
false true false false 208.000000 [(16) ] 0 50600 43950 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD2 \(INT0\)) ] 0 50750 43900 111.111115 text
grestore
50755 46865 51255 46865 10 line
50400 44300 50700 44300 10 line
gsave
false true false false 208.000000 [(15) ] 0 50600 44350 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD1 \(TXD\)) ] 0 50750 44300 111.111115 text
grestore
50400 44700 50700 44700 10 line
gsave
false true false false 208.000000 [(14) ] 0 50600 44750 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD0 \(RXD\)) ] 0 50750 44700 111.111115 text
grestore
50400 45100 50700 45100 10 line
gsave
false true false false 208.000000 [(13) ] 0 50600 45150 111.111115 text
grestore
gsave
false false false false 208.000000 [(XTAL1) ] 0 50750 45100 111.111115 text
grestore
50400 45500 50700 45500 10 line
gsave
false true false false 208.000000 [(12) ] 0 50600 45550 111.111115 text
grestore
gsave
false false false false 208.000000 [(XTAL2) ] 0 50750 45500 111.111115 text
grestore
50400 45900 50700 45900 10 line
gsave
false false false false 208.000000 [(GND) ] 0 50750 45900 111.111115 text
grestore
gsave
false false false false 260.000000 [(11) ] 0 50444 45909 138.888885 text
grestore
50400 46300 50700 46300 10 line
gsave
false true false false 208.000000 [(10) ] 0 50600 46350 111.111115 text
grestore
gsave
false false false false 208.000000 [(VCC) ] 0 50750 46300 111.111115 text
grestore
50400 47100 50700 47100 10 line
gsave
false true false false 208.000000 [(8) ] 0 50600 47150 111.111115 text
grestore
gsave
false false false false 208.000000 [(PB7 \(SCK\)) ] 0 50750 47100 111.111115 text
grestore
50400 47500 50700 47500 10 line
gsave
false true false false 208.000000 [(7) ] 0 50600 47550 111.111115 text
grestore
gsave
false false false false 208.000000 [(PB6 \(MISO\)) ] 0 50750 47500 111.111115 text
grestore
50400 47900 50700 47900 10 line
gsave
false true false false 208.000000 [(6) ] 0 50600 47950 111.111115 text
grestore
gsave
false false false false 208.000000 [(PB5 \(MOSI\)) ] 0 50750 47900 111.111115 text
grestore
50400 48300 50700 48300 10 line
gsave
false true false false 208.000000 [(5) ] 0 50600 48350 111.111115 text
grestore
gsave
false false false false 208.000000 [(PB4 \(SS\)) ] 0 50750 48300 111.111115 text
grestore
51162 48424 51362 48424 10 line
50400 48700 50700 48700 10 line
gsave
false true false false 208.000000 [(4) ] 0 50600 48750 111.111115 text
grestore
gsave
false false false false 208.000000 [(PB3 \(OC0/AIN1\)) ] 0 50750 48700 111.111115 text
grestore
50400 49100 50700 49100 10 line
gsave
false true false false 208.000000 [(3) ] 0 50600 49150 111.111115 text
grestore
gsave
false false false false 208.000000 [(PB2 \(INT2/AIN0\)) ] 0 50750 49100 111.111115 text
grestore
50400 49500 50700 49500 10 line
gsave
false true false false 208.000000 [(2) ] 0 50600 49550 111.111115 text
grestore
gsave
false false false false 208.000000 [(PB1 \(T1\)) ] 0 50750 49500 111.111115 text
grestore
50400 49900 50700 49900 10 line
gsave
false true false false 208.000000 [(1) ] 0 50600 49950 111.111115 text
grestore
gsave
false false false false 208.000000 [(PB0 \(XCK/T0\)) ] 0 50750 49900 111.111115 text
grestore
53600 42300 53300 42300 10 line
gsave
false false false false 208.000000 [(21) ] 0 53400 42350 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(OC2\) PD7) ] 0 53250 42300 111.111115 text
grestore
53600 42700 53300 42700 10 line
gsave
false false false false 208.000000 [(22) ] 0 53400 42750 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(SCL\) PC0) ] 0 53250 42700 111.111115 text
grestore
53600 43100 53300 43100 10 line
gsave
false false false false 208.000000 [(23) ] 0 53400 43150 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(SDA\) PC1) ] 0 53250 43100 111.111115 text
grestore
53600 47100 53300 47100 10 line
gsave
false false false false 208.000000 [(33) ] 0 53400 47150 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AD7\) PA7) ] 0 53250 47100 111.111115 text
grestore
53600 47500 53300 47500 10 line
gsave
false false false false 208.000000 [(34) ] 0 53400 47550 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AD6\) PA6) ] 0 53250 47500 111.111115 text
grestore
53600 47900 53300 47900 10 line
gsave
false false false false 208.000000 [(35) ] 0 53400 47950 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AD5\) PA5) ] 0 53250 47900 111.111115 text
grestore
53600 48300 53300 48300 10 line
gsave
false false false false 208.000000 [(36) ] 0 53400 48350 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AD4\) PA4) ] 0 53250 48300 111.111115 text
grestore
53600 48700 53300 48700 10 line
gsave
false false false false 208.000000 [(37) ] 0 53400 48750 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AD3\) PA3) ] 0 53250 48700 111.111115 text
grestore
53600 49100 53300 49100 10 line
gsave
false false false false 208.000000 [(38) ] 0 53400 49150 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AD2\) PA2) ] 0 53250 49100 111.111115 text
grestore
53600 49500 53300 49500 10 line
gsave
false false false false 208.000000 [(39) ] 0 53400 49550 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AD1\) PA1) ] 0 53250 49500 111.111115 text
grestore
53600 49900 53300 49900 10 line
gsave
false false false false 208.000000 [(40) ] 0 53400 49950 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AD0\) PA0) ] 0 53250 49900 111.111115 text
grestore
50700 41900 53300 41900 10 line
53300 41900 53300 50300 10 line
53300 50300 50700 50300 10 line
50700 50300 50700 41900 10 line
gsave
false false false false 260.000000 [(ATmega16L) ] 0 50700 50350 138.888885 text
grestore
50400 46700 50600 46700 10 line
gsave
false true false false 208.000000 [(9) ] 0 50600 46750 111.111115 text
grestore
gsave
false false false false 208.000000 [(RESET) ] 0 50750 46700 111.111115 text
grestore
50400 43500 50700 43500 10 line
gsave
false true false false 208.000000 [(17) ] 0 50600 43550 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD3 \(INT1\)) ] 0 50750 43500 111.111115 text
grestore
50400 43100 50700 43100 10 line
gsave
false true false false 208.000000 [(18) ] 0 50600 43150 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD4 \(OC1B\)) ] 0 50750 43100 111.111115 text
grestore
50400 42700 50700 42700 10 line
gsave
false true false false 208.000000 [(19) ] 0 50600 42750 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD5 \(OC1A\)) ] 0 50750 42700 111.111115 text
grestore
50400 42300 50700 42300 10 line
gsave
false true false false 208.000000 [(20) ] 0 50600 42350 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD6 \(ICP\)) ] 0 50750 42300 111.111115 text
grestore
53600 43500 53300 43500 10 line
gsave
false false false false 208.000000 [(24) ] 0 53400 43550 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(TCK\) PC2) ] 0 53250 43500 111.111115 text
grestore
53600 43900 53300 43900 10 line
gsave
false false false false 208.000000 [(25) ] 0 53400 43950 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(TMS\) PC3) ] 0 53250 43900 111.111115 text
grestore
53600 44300 53300 44300 10 line
gsave
false false false false 208.000000 [(26) ] 0 53400 44350 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(TDO\) PC4) ] 0 53250 44300 111.111115 text
grestore
53600 44700 53300 44700 10 line
gsave
false false false false 208.000000 [(27) ] 0 53400 44750 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(TDI\) PC5) ] 0 53250 44700 111.111115 text
grestore
53600 45100 53300 45100 10 line
gsave
false false false false 208.000000 [(28) ] 0 53400 45150 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(TOSC1\) PC6) ] 0 53250 45100 111.111115 text
grestore
53600 45500 53300 45500 10 line
gsave
false false false false 208.000000 [(29) ] 0 53400 45550 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(TOSC2\) PC7) ] 0 53250 45500 111.111115 text
grestore
53600 45900 53300 45900 10 line
gsave
false false false false 208.000000 [(30) ] 0 53400 45950 111.111115 text
grestore
gsave
false true false false 208.000000 [(AVCC) ] 0 53250 45900 111.111115 text
grestore
53600 46300 53300 46300 10 line
gsave
false false false false 208.000000 [(31) ] 0 53400 46350 111.111115 text
grestore
gsave
false true false false 208.000000 [(GND) ] 0 53250 46300 111.111115 text
grestore
53600 46700 53300 46700 10 line
gsave
false false false false 208.000000 [(32) ] 0 53400 46750 111.111115 text
grestore
gsave
false true false false 208.000000 [(AREF) ] 0 53250 46700 111.111115 text
grestore
50650 46700 50 0 360 10 darc
grestore
gsave
false true false false 260.000000 [(PDIP40) ] 0 53300 50400 138.888885 text
grestore
gsave
42800 47700 42800 47500 10 line
gsave
false true false false 156.000000 [(D) ] 0 42900 47550 83.333336 text
grestore
42800 46900 42800 46700 10 line
gsave
false true false false 156.000000 [(S) ] 0 42900 46750 83.333336 text
grestore
42900 47201 316 0 360 10 darc
43000 47400 43000 47000 10 line
43400 47200 43216 47200 10 line
gsave
false true false false 156.000000 [(G) ] 0 43300 47250 83.333336 text
grestore
43000 47200 43216 47200 10 line
42800 47500 42800 47340 10 line
42960 47400 42960 47280 10 line
42960 47000 42960 47120 10 line
42960 47140 42960 47260 10 line
42960 47340 42800 47340 10 line
42960 47060 42800 47060 10 line
42800 46900 42800 47060 10 line
42800 47060 42800 47200 10 line
42960 47200 42920 47220 10 line
42920 47220 42920 47180 10 line
42920 47180 42960 47200 10 line
42920 47200 42800 47200 10 line
42800 47400 42720 47400 10 line
42740 47230 42680 47230 10 line
42720 47400 42710 47400 10 line
42710 47280 42710 47400 10 line
42760 47210 42740 47230 10 line
42680 47230 42660 47250 10 line
42740 47170 42710 47230 10 line
42680 47170 42710 47230 10 line
42740 47170 42680 47170 10 line
42710 47230 42710 47280 10 line
42800 47000 42710 47000 10 line
42710 47000 42710 47170 10 line
42800 47400 5 0 360 10 darc
42800 47400 5 dot
42800 47060 5 0 360 10 darc
42800 47060 5 dot
42800 47000 5 0 360 10 darc
42800 47000 5 dot
grestore
gsave
false true false false 260.000000 [(2N7002) ] 0 42500 47200 138.888885 text
grestore
gsave
43700 47200 43700 47000 10 line
gsave
false true false false 208.000000 [(1) ] 270 43750 47050 111.111115 text
grestore
43700 46300 43700 46500 10 line
gsave
false false false false 208.000000 [(2) ] 270 43750 46450 111.111115 text
grestore
43900 46650 43500 46650 10 line
43700 46500 43700 46650 10 line
43700 46850 43700 47000 10 line
43900 46961 43800 46961 10 line
43849 46910 43849 47010 10 line
43500 46750 43900 46750 10 line
43900 46750 43900 46850 10 line
43900 46850 43500 46850 10 line
43500 46850 43500 46750 10 line
newpath
43700 47200
30
0 360 arc
fill
newpath
43700 47200
30
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(20u) ] 270 44000 47000 138.888885 text
grestore
gsave
44900 47200 44750 47200 10 line
44000 47200 44152 47200 10 line
44150 47100 44750 47100 10 line
44750 47100 44750 47300 10 line
44750 47300 44150 47300 10 line
44150 47300 44150 47100 10 line
grestore
gsave
false false false false 260.000000 [(30k) ] 0 44200 47400 138.888885 text
grestore
gsave
41600 49700 200 270 450 10 darc
41600 49300 200 270 450 10 darc
41600 48900 200 270 450 10 darc
41600 48500 200 270 450 10 darc
41600 48300 41600 47700 10 line
gsave
false false false false 260.000000 [(RELAY) ] 0 41900 48000 138.888885 text
grestore
41600 50500 41600 49900 10 line
42800 50500 42800 49900 10 line
42800 48300 42800 47700 10 line
41300 48200 43100 48200 10 line
43100 48200 43100 50000 10 line
43100 50000 41300 50000 10 line
41300 50000 41300 48200 10 line
42200 49800 42200 48400 10 line
42200 49100 42850 49950 10 line
grestore
gsave
false false false false 260.000000 [(lamp) ] 0 43100 50050 138.888885 text
grestore
gsave
43140 50500 42800 50500 10 line
43240 50500 100 0 360 10 darc
grestore
gsave
false false false true 260.000000 [(delta) ] 0 43450 50550 138.888885 text
grestore
gsave
42700 45900 42900 45900 10 line
42900 45900 42900 45920 10 line
42900 45920 42700 45920 10 line
42700 45920 42700 45900 10 line
42800 46100 42800 45920 10 line
grestore
43400 47200 44000 47200 10 line
43700 46300 42800 46300 10 line
42800 46100 42800 46700 10 line
gsave
47000 47800 47000 47600 10 line
gsave
false true false false 156.000000 [(D) ] 0 47100 47650 83.333336 text
grestore
47000 47000 47000 46800 10 line
gsave
false true false false 156.000000 [(S) ] 0 47100 46850 83.333336 text
grestore
47100 47301 316 0 360 10 darc
47200 47500 47200 47100 10 line
47600 47300 47416 47300 10 line
gsave
false true false false 156.000000 [(G) ] 0 47500 47350 83.333336 text
grestore
47200 47300 47416 47300 10 line
47000 47600 47000 47440 10 line
47160 47500 47160 47380 10 line
47160 47100 47160 47220 10 line
47160 47240 47160 47360 10 line
47160 47440 47000 47440 10 line
47160 47160 47000 47160 10 line
47000 47000 47000 47160 10 line
47000 47160 47000 47300 10 line
47160 47300 47120 47320 10 line
47120 47320 47120 47280 10 line
47120 47280 47160 47300 10 line
47120 47300 47000 47300 10 line
47000 47500 46920 47500 10 line
46940 47330 46880 47330 10 line
46920 47500 46910 47500 10 line
46910 47380 46910 47500 10 line
46960 47310 46940 47330 10 line
46880 47330 46860 47350 10 line
46940 47270 46910 47330 10 line
46880 47270 46910 47330 10 line
46940 47270 46880 47270 10 line
46910 47330 46910 47380 10 line
47000 47100 46910 47100 10 line
46910 47100 46910 47270 10 line
47000 47500 5 0 360 10 darc
47000 47500 5 dot
47000 47160 5 0 360 10 darc
47000 47160 5 dot
47000 47100 5 0 360 10 darc
47000 47100 5 dot
grestore
gsave
false true false false 260.000000 [(2N7002) ] 0 46700 47300 138.888885 text
grestore
gsave
47900 47300 47900 47100 10 line
gsave
false true false false 208.000000 [(1) ] 270 47950 47150 111.111115 text
grestore
47900 46400 47900 46600 10 line
gsave
false false false false 208.000000 [(2) ] 270 47950 46550 111.111115 text
grestore
48100 46750 47700 46750 10 line
47900 46600 47900 46750 10 line
47900 46950 47900 47100 10 line
48100 47061 48000 47061 10 line
48049 47010 48049 47110 10 line
47700 46850 48100 46850 10 line
48100 46850 48100 46950 10 line
48100 46950 47700 46950 10 line
47700 46950 47700 46850 10 line
newpath
47900 47300
30
0 360 arc
fill
newpath
47900 47300
30
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(20u) ] 270 48200 47100 138.888885 text
grestore
gsave
49100 47300 48950 47300 10 line
48200 47300 48352 47300 10 line
48350 47200 48950 47200 10 line
48950 47200 48950 47400 10 line
48950 47400 48350 47400 10 line
48350 47400 48350 47200 10 line
grestore
gsave
false false false false 260.000000 [(30k) ] 0 48400 47500 138.888885 text
grestore
gsave
45800 49800 200 270 450 10 darc
45800 49400 200 270 450 10 darc
45800 49000 200 270 450 10 darc
45800 48600 200 270 450 10 darc
45800 48400 45800 47800 10 line
gsave
false false false false 260.000000 [(RELAY) ] 0 46100 48100 138.888885 text
grestore
45800 50600 45800 50000 10 line
47000 50600 47000 50000 10 line
47000 48400 47000 47800 10 line
45500 48300 47300 48300 10 line
47300 48300 47300 50100 10 line
47300 50100 45500 50100 10 line
45500 50100 45500 48300 10 line
46400 49900 46400 48500 10 line
46400 49200 47050 50050 10 line
grestore
gsave
false false false false 260.000000 [(heater) ] 0 47300 50150 138.888885 text
grestore
gsave
47340 50600 47000 50600 10 line
47440 50600 100 0 360 10 darc
grestore
gsave
false false false true 260.000000 [(delta) ] 0 47650 50650 138.888885 text
grestore
gsave
46900 46000 47100 46000 10 line
47100 46000 47100 46020 10 line
47100 46020 46900 46020 10 line
46900 46020 46900 46000 10 line
47000 46200 47000 46020 10 line
grestore
47600 47300 48200 47300 10 line
47900 46400 47000 46400 10 line
47000 46200 47000 46800 10 line
gsave
42600 42600 42600 42400 10 line
gsave
false true false false 156.000000 [(D) ] 0 42700 42450 83.333336 text
grestore
42600 41800 42600 41600 10 line
gsave
false true false false 156.000000 [(S) ] 0 42700 41650 83.333336 text
grestore
42700 42101 316 0 360 10 darc
42800 42300 42800 41900 10 line
43200 42100 43016 42100 10 line
gsave
false true false false 156.000000 [(G) ] 0 43100 42150 83.333336 text
grestore
42800 42100 43016 42100 10 line
42600 42400 42600 42240 10 line
42760 42300 42760 42180 10 line
42760 41900 42760 42020 10 line
42760 42040 42760 42160 10 line
42760 42240 42600 42240 10 line
42760 41960 42600 41960 10 line
42600 41800 42600 41960 10 line
42600 41960 42600 42100 10 line
42760 42100 42720 42120 10 line
42720 42120 42720 42080 10 line
42720 42080 42760 42100 10 line
42720 42100 42600 42100 10 line
42600 42300 42520 42300 10 line
42540 42130 42480 42130 10 line
42520 42300 42510 42300 10 line
42510 42180 42510 42300 10 line
42560 42110 42540 42130 10 line
42480 42130 42460 42150 10 line
42540 42070 42510 42130 10 line
42480 42070 42510 42130 10 line
42540 42070 42480 42070 10 line
42510 42130 42510 42180 10 line
42600 41900 42510 41900 10 line
42510 41900 42510 42070 10 line
42600 42300 5 0 360 10 darc
42600 42300 5 dot
42600 41960 5 0 360 10 darc
42600 41960 5 dot
42600 41900 5 0 360 10 darc
42600 41900 5 dot
grestore
gsave
false true false false 260.000000 [(2N7002) ] 0 42300 42100 138.888885 text
grestore
gsave
43500 42100 43500 41900 10 line
gsave
false true false false 208.000000 [(1) ] 270 43550 41950 111.111115 text
grestore
43500 41200 43500 41400 10 line
gsave
false false false false 208.000000 [(2) ] 270 43550 41350 111.111115 text
grestore
43700 41550 43300 41550 10 line
43500 41400 43500 41550 10 line
43500 41750 43500 41900 10 line
43700 41861 43600 41861 10 line
43649 41810 43649 41910 10 line
43300 41650 43700 41650 10 line
43700 41650 43700 41750 10 line
43700 41750 43300 41750 10 line
43300 41750 43300 41650 10 line
newpath
43500 42100
30
0 360 arc
fill
newpath
43500 42100
30
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(20u) ] 270 43800 41900 138.888885 text
grestore
gsave
44700 42100 44550 42100 10 line
43800 42100 43952 42100 10 line
43950 42000 44550 42000 10 line
44550 42000 44550 42200 10 line
44550 42200 43950 42200 10 line
43950 42200 43950 42000 10 line
grestore
gsave
false false false false 260.000000 [(30k) ] 0 44000 42300 138.888885 text
grestore
gsave
41400 44600 200 270 450 10 darc
41400 44200 200 270 450 10 darc
41400 43800 200 270 450 10 darc
41400 43400 200 270 450 10 darc
41400 43200 41400 42600 10 line
gsave
false false false false 260.000000 [(RELAY) ] 0 41700 42900 138.888885 text
grestore
41400 45400 41400 44800 10 line
42600 45400 42600 44800 10 line
42600 43200 42600 42600 10 line
41100 43100 42900 43100 10 line
42900 43100 42900 44900 10 line
42900 44900 41100 44900 10 line
41100 44900 41100 43100 10 line
42000 44700 42000 43300 10 line
42000 44000 42650 44850 10 line
grestore
gsave
false false false false 260.000000 [(ventillator) ] 0 42900 44950 138.888885 text
grestore
gsave
42940 45400 42600 45400 10 line
43040 45400 100 0 360 10 darc
grestore
gsave
false false false true 260.000000 [(delta) ] 0 43250 45450 138.888885 text
grestore
gsave
42500 40800 42700 40800 10 line
42700 40800 42700 40820 10 line
42700 40820 42500 40820 10 line
42500 40820 42500 40800 10 line
42600 41000 42600 40820 10 line
grestore
43200 42100 43800 42100 10 line
43500 41200 42600 41200 10 line
42600 41000 42600 41600 10 line
50400 49100 48800 49100 10 line
48800 49100 48800 50900 10 line
48800 50900 45200 50900 10 line
45200 50900 45200 47200 10 line
45200 47200 44900 47200 10 line
50400 48700 49700 48700 10 line
49700 48700 49700 47300 10 line
49700 47300 49100 47300 10 line
50400 48300 50100 48300 10 line
50100 42100 50100 48300 10 line
50100 42100 44700 42100 10 line
gsave
false false false false 260.000000 [(Relays) () ] 0 49500 40900 138.888885 text
grestore
newpath
43700 47200
30
0 360 arc
fill
newpath
43700 47200
30
0 360 arc
fill
newpath
43700 47200
30
0 360 arc
fill
newpath
42800 46300
30
0 360 arc
fill
newpath
42800 46300
30
0 360 arc
fill
newpath
42800 46300
30
0 360 arc
fill
newpath
47900 47300
30
0 360 arc
fill
newpath
47900 47300
30
0 360 arc
fill
newpath
47900 47300
30
0 360 arc
fill
newpath
47000 46400
30
0 360 arc
fill
newpath
47000 46400
30
0 360 arc
fill
newpath
47000 46400
30
0 360 arc
fill
newpath
43500 42100
30
0 360 arc
fill
newpath
43500 42100
30
0 360 arc
fill
newpath
43500 42100
30
0 360 arc
fill
newpath
42600 41200
30
0 360 arc
fill
newpath
42600 41200
30
0 360 arc
fill
newpath
42600 41200
30
0 360 arc
fill
showpage
%%End
